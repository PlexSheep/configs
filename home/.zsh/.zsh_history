pgrep syncthing
killall syncthing
sudo passwd root
su root
passwd
vi
which discord
rm $ZSH/.zsh_history
clear -h
clear --help
man clear
man history
flatpak install betterdiscord
flatpak install better-discord
chmod +x BetterDiscord-Linux.AppImage
sudo pacman -S discord
./BetterDiscord-Linux.AppImage
sudo nvim â€ƒ¸/home/plex/.local/share/applications/com.discordapp.Discord.desktopâ€ƒ¹.
cd /home/plex/.local/share/applications/com.discordapp.Discord.desktop
cd /home/plex/.local/share/applications/
sudo nvim com.discordapp.Discord.desktop
sudo rm /etc/inputrc
sudo lvim /etc/inputrc
bind -f  ~/.inputrc
bash
sudo lvim ~/.zshrc
sudo pacman -S nerd-fonts-complete 
ls -l
chmod +x *
./graphics-tablet-commands.sh
nvim ~/.p10k.zsh
sudo pacman -U nerd-fonts-complete 
sudo lvim /etc/pacman.conf
sudo pacman -Syu yay
cd Documents
mkdir AUR
cd AUR
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -sri
yay
yay -S nerd-fonts-hack
yay -S ttf-nerd-fonts-hack-complete-git 
yay -S nerd-fonts-git 
yay -S nerd-fonts-noto-sans-mono 
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $ZSH/powerlevel10k\
echo 'source $ZSH/powerlevel10k/powerlevel10k.zsh-theme' >>~/.zshrc
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $ZSH/themes/powerlevel10k\
echo 'source $ZSH/themes/powerlevel10k/powerlevel10k.zsh-theme' >>~/.zshrc
sudo rm -r *
yay -S nerd-fonts-complete 
yay -S nerd-fonts-anonymous-pro 
lvim ~/.p10k.zsh
sudo cp ~/Documents/config/.wakeonlan ~ -r
cd .config
cd kitty
lvim kitty.conf
kitty source
kitty source ~/.config/kitty/kitty.conf
kitty --help

lvim ~/.zshrc
sudo yay -S cmatrix
/usr/bin/hollywood 
gcc
gdb
sudo yay -S virt-manager
yay -S hollywood
#
cd ~/Documents/code/c
lvim wordSearch.c
function prompt_my_psn_logo() {\
  p10k segment -b black -f white -i $'\uE230'\
}
prompt_my_psn_logo
p10k configure
print -P '\uE230%K{red} %k'
mv * /usr/share/font
mv * /usr/share/fonts
sudo mv * /usr/share/fonts
sudo lvim /etc/systemd/system.conf
lvim .config/kitty/kitty.conf
man calloc
gcc student-struct.c -o student-struct
./student-struct
nvim ~/Documents/code/c/basic/student-struct
nvim ~/Documents/code/c/basic/student-struct.c
sudo cp ~/Downloads/sysinit.vim /etc/xdg/nvim/
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \\
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
sudo pacman -Syu nnn lsd bat zoxide mcfly lazygit micro
man struct
$LC_*
man 2 bind
echo $LC_*
man alloc
sudo dpkg-reconfigure locales
sudo nvim /etc/locale.gen
echo $LC
echo $LC_ALL
cd ~/Documents/code/c/basic
cat 7teiler.c
bat 7teiler.c
bat -h
bat echo.c | cat
bat echo.c | cat -C
bat echo.c | cat -h
cat -h
which cat
bat echo.c
z a
zoix
zoxide
mcfly
mcfly search
sudo pacman -R micro mcfly
MOZ_ENABLE_WAYLAND=1 ./firefox -ProfileManager -no-remote
MOZ_ENABLE_WAYLAND=1 firefox -ProfileManager -no-remote
mkdir -p ~/.config/environment.d/
gcc student-struct.c -o student-struct && ./student-struct
nvim ~/.config/environment.d/envvars.conf
sudo pacman -S fzf
fzf
Documents 
Documents Documents/code 
Documents
nvim read.txt
./echofile 7teiler.c
gcc echofile.c -o echofile && ./echofile
./echofile 7teiler.c 7teiler.c
gcc echofile.c -o echofile && ./echofile 7teiler.c
./echofile factorial.c
bat factorial.c
\:q
cd Documents/code/c/basic
sed
ls -R | sed .c
ls -R | sed "*.c"
man sed
ls -R | grep -P .c
ls -R | sed -n  's/.c'
ls -R | sed -n  's/.c -- //p'
ls -R | sed -n  's/c -- //p'
sudo pacman -Syu awk
man awk
awk
awk --help
ll | awk '/.c/'
ll | grep -v "*.c"
ll | grep -v "c"
ll | grep -v "wordSearch"
ll | grep -v ".c"
ll | grep -wv .c
ll | grep -wv *.c
ll | grep -wv c
nvim student-struct.c
cd $ZSH
rm -r .local/state/nvim/swap/*

nvim echofile.c
man nnn
killall discord
bindkey -s "^L" 'ls^M'\

file chrome-sandbox
which
which lvim
nvim ~/.bashrc
killall steam
curl google.de
mkdir -p ~/Documents/game-tools
mv * ~/Documents/game-tools
cd ~/Documents/game-tools
unzip *
sudo pacman -Syu tar gzip zip
unzip irony-linux-x64.zip
zip -xf irony-linux-x64.zip
gzip
gzip -d RimPy_Linux.tar.gz
cd irony-linux-x64
sudo systemctl enable qemu
sudo pacman -S broken-package-yeeter
sudo pacman -S qemu qemu-desktop
sudo pacman -S qemu-desktop
sudo pacman -S qemu-full
sudo pacman -S kvm
getent group libvirt
newgrp libvirt\
virt-manager
sudo newgrp libvirt\
virt-manager
sudo bash
sudo usermod -aG libvirt
sudo usermod -aG libvirt plex
whois
sudo pacman -Syu whois
whois du4l.org
yay -S irony-mod-manager
yay -S rimpy
sudo pacman -Syu electron-mail
yay -Syu electron-mail
flatpak install electronmail
flatpak install electron-mail
flatpak install ElectronMail
cd Documents/game-tools/irony-linux-x64
l | grep ir
l | grep -vw dll
l | grep -vw dll | grep -vw drwx
l | grep -vw dll | grep -vw so
l | grep -vw dll | grep -vw so | grep -vw json
l | grep -vw dll | grep -vw so | grep -vw json | grep -vw pdb
chmod +x ./IronyModManager
./IronyModManager
sudo pacman -Syu qemu libvirt
sudo pacman -Syu virtualbox
sudo systemctl status libvirt
sudo systemctl status libvirtd
sudo systemctl enable libvirtd
sudo systemctl start libvirtd
sudo pacman -S fprintd
sudo nvim /etc/pam.d/system-local-login
nvim /etc/pam.d/system-local-login
fprintd
fprintd-delete
fprintd-delete plex
man fprintd-enroll
for finger in {left,right}-{thumb,{index,middle,ring,little}-finger}; do fprintd-enroll -f "$finger" "$USER"; done
for finger in {right}-{thumb,{index,middle,ring,little}-finger}; do fprintd-enroll -f "$finger" "$USER"; done
btop 
for finger in {right}-{thumb,{index,middle,ring,little}-finger}; do fprintd-enroll -f "$finger" "$USER"; done\

sudo pacman -S fwupd
fwupdmgr get-devices
lshw
cd /dev
l -R | grep pri
fprintd-enroll 
fprintd-list
sudo systemctl restart fprintd
systemctl status fprintd
fprintd-list plex
yay -S fingerprint-gui
nvim /etc/locale.gen
localedef --list-archive
nvim /etc/locale.conf
localectl set-locale LANG=en_US.UTF-8
wol
cd $ZSH/plugins
mkdir wakeonlan
wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/wakeonlan/wakeonlan.plugin.zsh
wol -h 192.168.178.60 FF:FF:FF:FF:FF:FF
nvim all
sudo chown plex:plex .wakeonlan -R
cd wakeonlan
ssh aries.box
ssh 192.168.178.26
gcc wallpaper.c -o wallpaper
./wallpaper
gcc wallpaper.c -o wallpaper && ./wallpaper
bat aries
nvim homeserver
=00000n
gcc huffman.c -g -o huffman && ./huffman
gcc huffman.c -g -o huffman && ./huffman --help
gcc huffman.c -g -o huffman && ./huffman -h
gcc huffman.c -g -o huffman && ./huffman -f 10K-Text.txt
gcc huffman.c -g -o huffman && ./huffman -fvd 10K-Text.txt
gcc huffman.c -g -o huffman && ./huffman -vdf 10K-Text.txt
gcc huffman.c -g -o huffman && ./huffman -vdf 10K-Text.txt -h
./huffman
./huffman -dvf 10K-Text.txt
typeset -g POWERLEVEL9K_INSTANT_PROMPT=off
file *
file fprint-clear-storage-0.0.1-x86_64.AppImage
./fprint-clear-storage-0.0.1-x86_64.AppImage
sudo ./fprint-clear-storage-0.0.1-x86_64.AppImage
fprintd-enroll
fprintd-enroll --help
fprintd-enroll -f
fprintd-enroll -f --help
fprintd-enroll -f left-index-finger
fprintd-enroll -f left-index-finger --help
sudo fprintd-enroll -f left-index-finger plex
cd ~/Desktop
bat HITMAN\ 3.desktop
steam steam://rungameid/1659040\

./Launcher.exe
proton
ps
sudo fprintd-enroll -f right-index-finger plex
fprintd-verify plex
wake
arp
sudo pacman -S arp
sudo pacman -S nmap
nmap 192.168.178.26
nmap -sn 192.168.178.26
arping 192.168.178.26
sudo arping 192.168.178.26
cd .wakeonlan
bat all
nvim aries
sudo pacman -S wakeonlan
yay -S wakeonlan
wake aries
which wakeonlan
mysql
sudo pacman -R mysql
which mysql
sudo pacman -R mariadb
man akonadi
sudo pacman -S archlinux-wallpaper
nvim $/zshrc
nvim $ZSH/zshrc
man zsh
nvim /etc/zsh/zprofile
nvim /etc/profile
bindkey -l main
bindkey -M main
bindkey -M command
bindkey -M c.safe
bindkey -M .safe
bindkey -M isearch
bindkey -M vicmd
bindkey -l
man zshzle
man zshzle(1)
man zshzle 1
man zshzle 2
copyfile
cat wallpaper.c
npm install -g @angular/cli
sudo npm install -g @angular/cli
sudo pacman -S compdef
yay -S compdev
cd /proc/self/fd/
cd 13
fd
self
sudo pacman -R speedtest speedtest-cli
sudo pacman -R speedtest-cli
sudo pacman -S libinput
sudo pacman -S xf86-input-wacom
exit
pkill yakuake
\:qa
ssh 192.168.167.60
ssh 192.168.178.60
lvim
cd demo-getting-started
rm -r *
mkdir old 
mv * old
mkdir demo
ld
man ld
ng new tour-of-heros
man hosts 5
man host
man host 5
host
hosts(5)
ping 192.168.178.26
curl 192.168.178.60
nslookup
nslookup google.de
dig @192.168.178.1 google.de
nslookup 
nslookup -h
nslookup --help
nslookup ganggangoverflow.de
pkill syncthing
syncthing serve
syncthing --help
sudo systemctl enable syncthing@plex
systemctl start syncthing
sudo systemctl start syncthing
sudo systemctl start syncthing@plex
pkill discord
locale -h
locale -l
sudo locale-gen "en_US.UTF-8"
bat /etc/environment
localectl
localectl list-locales
bat /etc/profile
bat /etc/profile.d/locale.sh
bat locale.conf
LC_ALL="en_DE.UTF-8"
export LC_ALL="en_DE.UTF-8"
nvim ~/.config/plasma-locale-settings.sh
nvim plasma-localerc
nvim /etc/default
locale -a
git
man nslookup
man malloc
sudo pacman -R qterminal
yay -R hollywood byobu
sudo pacman -R byobu
sudo pacman -S xournal++
journalctl -p5
systemd-analyze 
systemd-analyze --help
systemd-analyze critical-chain
pkill firefox
firefox
echo $LANGUAGE
flameshot gui
sudo pacman -S krita
python
poweroff#
nvim .config/kitty/kitty.conf
cd .steam/steam/steamapps/
cd common
pdw
cd Hearts\ of\ Iron\ IV
l hoi4
file hoi4
cd 
mv Hearts\ of\ Iron\ IV\ \(steam\).desktop Hearts\ of\ Iron\ IV\ steam.desktop
nvim Hearts\ of\ Iron\ IV.desktop
rm kali-linux-2022.3-installer-amd64.iso.torrent
mv kali-linux-2022.3-installer-amd64.iso /var/lib/libvirt/images
sudo mv kali-linux-2022.3-installer-amd64.iso /var/lib/libvirt/images
yay -S dnsmasq
cd /var/lib/libvirt/
cd images
sudo pacman -S ttyclock
bat * 
echo
bat * | less
bat sddm-autologin
bat passwd
bat shadow
bat sudo
bat system-auth
bat login
nvim kde
nvim sddm
groups
sudo usermod -aG input plex
nvim system-local-login 
vim system-local-login 
ls -la
cd .local/
ls -R | grep nvim
cd state/
cd nvim/
ls -R
cd share/
cd nvim
ls --a
ls -a
cd /etc/pam.d
bat sddm
bat kde
su
ps axu | grep h
ps axu | grep hear
ps axu | grep hoi
pkill sddm
sudo pkill sddm
nvim /etc/pam.d/sddm
bat /etc/pam.d/sddm
cd Desktop
nvim Hearts\ of\ Iron\ IV\ steam.desktop
cd angular/
cd tour-of-heros
sudo cp /etc/xdg/nvim/sysinit.vim /etc/xdg/nvim/sysinit.vim.bak
sudo pacman -S st
sudo pacman -S stty
sudo pacman -S sttty
yay -S st
st
yay -S urxvt alacritty
yay -S xterm
yay -S rxvt
yay -S rxvt-unicode
cd .
ng generate component heroes
mv mv mock-heroes.ts app
mv mv mock-heroes.ts src
ng generate component hero-detail
wake homeserver
bat /etc/hosts
bat ~/.wakeonlan/homeserver
wol -h 192.168.178.60 d0:17:c2:a8:78:b4
wakeonlan
wakeonlan -i 192.168.178.60
wol -h 255.255.255.255 d0:17:c2:a8:78:b4
wol d0:17:c2:a8:78:b4
ping 192.168.178.60
nvim $XDG_CONFIG_HOME/alacritty/alacritty.yml
echo $XDG_CONFIG_HOME/alacritty/alacritty.yml
cd /etc/xdg
mkdir alacritty
nvim $HOME/.config/alacritty/alacritty.yml
cd Documents/code/TS
rm -r tour-of-heros
sudo rm -r tour-of-heros
Ã¶
rm -rf tour-of-heros
ng new angular-tour-of-heroes
pkill hoi
dolphin .
objdump wallpaper
objdump ./wallpaper
objdump 
objdump 7teiler
gdb wallpaper
man objdump
objdump -d 7teiler
objdump -d wallpaper | less
git clone https://github.com/johndoe31415/educpu
cd educpu
./educpu-as
nvim educpu.circ
bat 01_hello_world.asm
chmod +x 01_hello_world.bin
./01_hello_world.bin
chmod -x 01_hello_world.*
la
journalctl 
cd /sys
cd /etc/systemd
nvim system.conf
sudo systemctl daemon-reload
cmatrix- L
cmatrix -bC red
git clone https://github.com/danthem/undelete-btrfs
cd undelete-btrfs
sudo ./undelete.sh
sudo ./undelete.sh --help
sudo ./undelete.sh /dev/mapper/luksdev /home/plex/Documents/code/c
touch trash
dd of=/dev/urandom if=/tmp/trash 
dd of=/dev/urandom if=/tmp/trash --help
dd of=/dev/urandom if=/tmp/trash fullblock
bat trash
ll trash
trash trash
cat /dev/urandom > trash
trash-put trash
man rm
sudo pacman -S trash-cli
trash
man trash
trash undelete-btrfs
git push c-basic
  git push --set-upstream c-basic master\

git push https://github.com/PlexSheep/c-basic
git push --set-upstream https://github.com/PlexSheep/c-basic
rmdir basic
ls basic
ls basic -a
mv c-basic basic
git config --global user.email "PlexSheep@protonmail.com"
git config --global user.name "PlexSheep"
git commit
sudo pacman -S photorec
sudo pacman -S undelete
yay -S undelete
yay -S extundelete
extundelete
extundelete --restore-all
man extundelete
extundelete --restore-path basic
sudo extundelete --restore-path basic
yay -S undelete-btrfs
btrfs restore ./basic
ll -R
cd basic
nvim .zshrc
git config --global credential.helper store
sudo git config --global credential.helper store
git config --global credential.helper 'store --file ~/.my-credentials'
nvim compiler-test.c
gcc compiler-test.c -o compiler-test
bat ~/.git-credentials
ng serve
nvim wallpaper.c
hollywood
free -mh
cmatrix
cd
mkdir ~/Documents/Schulsachen/Mathe/mathe1/2022-11-24
lsd
lsd -l
lsd -h
lsd -hl
man lsd
cd ..
tmux
mv ~/.my-credentials ~/.git-credentials
nvim ~/.my-credentials
nvim ~/.gitconfig
cd bash
cp -r code code.bak
cd code
mkdir configs
cd configs
cp /etc/xdg/nvim/sysinit.vim .
cp ~/.zsh . -r
sudo systemctl restart qemu
sudo systemctl restart libvirt
sudo systemctl restart libvirtd
curl reddit.com
ping archlinux.org
curl archlinux.com
curl archlinux.org
curl https://archlinux.org
curl https://reddit.com
sudo pacman -S aspell
sudo pacman -Syu aspell
aspell
aspell dump
cd /usr/lib/aspell
aspell dump master
../aspell-0.60
aspell dump en_US
aspell dump --help
man aspell
yay -Syu powertop
sudo powertop --help
sudo powertop --auto-tune
scp plex@homeserver.box:/srv/data/Syncthing/code/c/basic/* .
scp plex@homeserver.box:/srv/data/Syncthing/code/c/basic/ ..
scp plex@homeserver.box:/srv/data/Syncthing/code/c/basic/* ..
echo "# configs" >> README.md\
git init\
git add README.md\
git commit -m "first commit"\
git branch -M main\
git remote add origin https://github.com/PlexSheep/configs.git\
git push -u origin main
nvim nvim.md
git add nvim.md
git commit -m "nvim-md"
git commit 
mv updater.sh updater-deb.sh
rm .* -rf
echo "# bash-scripts" >> README.md\
git init\
git add README.md\
git commit -am "initial commit"\
git branch -M main\
git remote add origin https://github.com/PlexSheep/bash-scripts.git\
git push -u origin main
mkdir hostssss
cd hostssss
scp plex@homeserver.box:/etc/nginx/conf.d/http/app.conf
scp plex@homeserver.box:/etc/nginx/conf.d/http/app.conf .
nvim app.conf
nslookup homeserver.box
nslookup a.homeserver.box
curl homeserver.box
curl a.homeserver.box
wakeonlan -i 255.255.255.255 d0:17:c2:a8:78:b4
ping homeserver.box
dn
echo "# angilar-demos" >> README.md\
git init\
git add README.md\
git commit -m "first commit"\
git branch -M main\
git remote add origin git@github.com:PlexSheep/angilar-demos.git\
git push -u origin main
echo "# angilar-demos" >> README.md\
git init\
git add README.md\
git commit -m "first commit"\
git branch -M main\
git remote add origin https://github.com/PlexSheep/angilar-demos.git\
git push -u origin main
git add README.md
git branch -M main
cd branches
l -R
nvim config
git remote add origin https://github.com/PlexSheep/angilar-demos.git
rm .git
rm .git -r
git add angular-tour-of-heroes/*
rm * -r
cd demo
rm -r demo
rm -r demo -f
git clone https://github.com/PlexSheep/angular-demos
nnn
git stash
git stash all
git commit -m "tour-of-heros-1" -a
git add angular-tour-of-heroes
git commit -a
git commit -m "tour-of-heros-1"
rm -rf angular-tour-of-heroes
git commit -am "fixing git stuff"
cp -r ~/Documents/code.bak/TS/angular/demo/angular-tour-of-heroes .
ly
bat README.md
sudo systemctl enable powertop
yay -S tlp
nvim /etc/tlp.conf
sudo bash -c 'echo deep > /sys/power/mem_sleep'
bat /sys/power/mem_sleep
cat /sys/kernel/debug/dri/0/i915_edp_psr_status
sudo cat /sys/kernel/debug/dri/0/i915_edp_psr_status
nvim /etc/modprobe.d/framework-als-deactivate.conf
nvim /etc/modprobe.d/i915.conf
sudo trash /etc/modprobe.d/i915.conf
sudo rm /etc/modprobe.d/i915.conf
sudo ls /etc/modprobe.d/i915.conf
sudo trash /etc/modprobe.d/i915.conf.disabled
sudo ls /etc/modprobe.d/
ssh homeserver.box
cp fail.c fail-1.c
gcc fail-1.c -o fail-1
filename="a.txt"
filename="a.c"
echo "${filename%.*}"
nvim /etc/hosts
man atio
man atoi
compile-and-run.sh
cat /dev/stdout
compile-and-run.sh echo.c
compile-and-run.sh echo.c < python -c '"AAAAAAAAAAAAA"*50'
compile-and-run.sh echo.c < python3 -c '"AAAAAAAAAAAAA"*50'
compile-and-run.sh echo.c < $(python -c '"AAAAAAAAAAAAA"*50')
$(python -c '"AAAAAAAAAAAAA"*50') | compile-and-run.sh echo.c
$(python -c '"AAAAAAAAAAAAA"*50') | echo
$(python -c '"AAAAAAAAAAAAA"*50') 
python -c '"AAAAAAAAAAAAA"*50'|compile-and-run.sh echo.c
python -c '"AAAAAAAAAAAAA"*50'|echo
python -c '"AAAAAAAAAAAAA"*50'
python -c "'AAAAAAAAAAAAA'*50"
python -c "print('hi')"
python -c "print("AAAAAAAAAAAAA"*5)"
python -c 'print("AAAAAAAAAAAAA"*5)'
python -c 'print("AAAAAAAAAAAAA"*50)'
python -c 'print("AAAAAAAAAAAAA"*50)'|compile-and-run.sh echo.c
compile-and-run.sh abc.c
neofetch
compile-and-run.sh abc.c 11 11 11
compile-and-run.sh abc.c 11 121 11
dd of=/dev/urandom if=/tmp/trash target=1M
dd of=/dev/urandom if=/tmp/trash seek=10K
dd if=/dev/urandom of=10K-random.img seek=10K
dd if=/dev/urandom of=10K-random.img seek=10
dd if=/dev/urandom of=10K-random.img seek=1c
dd if=/dev/urandom of=10K-random.img seek=1B
dd if=/dev/urandom of=10K-random.img skip=1K
dd if=/dev/urandom of=10K-random.img skip=1K seek=1K
dd if=/dev/urandom of=10K-random.img bs=1K
man dd
dd if=/dev/urandom of=10K-random.img count=1K
$wd
echo $WD
echo $LANG
nvim ~/.zshrc
source ~/.zshrc
man fgets
locales
man man
yay -S man
man printf
man 3 printf
yay -S manpages-dev
yay -S man-pages libstdc++-docs
man gets
man sqrt
man bash
yay -S timeshift
sudo systemctl enable timeshift
qq
q
sudo pkill visudo
echo $EDITOR
which visudo
sudo visudo
sudo whoami
tail testfiles/LICENSE
tail testfiles/LICENSE > testfiles/smalltext.txt
l testfiles/smalltext.txt
bin/huffman -f testfiles/smalltext.txt
bin/huffman -vf testfiles/smalltext.txt
../compile.sh
bin/huffman -vdxf testfiles/smalltext.txt
./compile-and-run.sh fail.c -dvf testfiles/smalltext.txt
../compile-and-run.sh fail.c -dvf testfiles/smalltext.txt
compile-and-run.sh huffman.c 
l huffman.c
bin/huffman testfiles/10K-random.img
dd if=/dev/urandom of=10K-random.img count=1KiB
dd if=/dev/urandom of=1K-random.img count=1KiB
dd if=/dev/urandom of=10K-random.img count=10KiB
cp ../../LICENSE .
bin/huffman -vf testfiles/LICENSE
bin/huffman -vf testfiles/1K-random.img
lazygit\

gcc fail.c -o fail
./fail
./fail-1
nvim fail.c
cp fail.c success.c
nvim success.c
gcc success.c -o success
./success
rm fail-*
./return-specified
./return-specified 11
nvim return-specified.c
gcc return-specified.c -o return-specified
./return-specified 
./compile-and-run.sh return-specified
./compile-and-run.sh return-specified.c
./compile-and-run.sh return-specified.c 1
./compile-and-run.sh return-specified.c 12
git add compile
rm compiler-tes*
rm success return-specified fail
./compile-and-run.sh return-specified.c 123
./compile-and-run.sh *
./compile-and-run.sh fail.c
./compile-and-run.sh success.c
chmod +x compile-and-run.sh
cp compile-and-run.sh /tmp
git add compile-and-run.sh
git commit -m "compile-and-run"
mkdir src
rm success return-specified fail compiler-tes*
cp compile-and-run.sh ~/.local/bin/
echo $PATH
l src
rm -d src
for file in *; do compile-and-run.sh file; done
compile-and-run.sh *
cp compile-and-run.sh compile.sh
./compile.sh
./compile.sh *
for file in $(ls); do compile-and-run.sh file; done
for file in $(/bin/ls); do compile-and-run.sh file; done
/bin/ls
for file in $(/bin/ls); do compile-and-run.sh $file; done
for file in $(/bin/ls); do echo $file; done
bat compile.sh
for file in $(/bin/ls); do ./compile.sh $file; done
echo 'for file in $(/bin/ls); do ./compile.sh $file; done' > compile-all.sh
chmod +x compile-all.sh
git add bin
git commit -m "compiled old sources, compile.sh"
ls ~/.local/bin
bat compile-all.sh
bat LICENSE
compile-and-run.sh scanf-test.c
nvim scanf-test.c
nvim scnaf-hex-test.c
compile-and-run.sh scnaf-hex-test.c
ls bin
nvim arrToBin.c
compile-all.sh
nvim echo.c
rm ~/.local/bin/compile*
./compile-and-run.sh scanf-test.c
nvim compiler-error.c
rm compiler-error.c
mkdir bin
cd bin
mkdir testfiles
touch README.md
nvim huffman/README.md
aspell *
aspell 7-teiler.c
aspell -h
aspell --help
aspell list
git sync
bin/warning
./compile.sh warning.c
./compile-and-run.sh warning.c
echo $?
gcc warning.c -o /tmp/trash
gcc --help | less
gcc --help warnings
gcc --help=warnings
gcc warning.c -o /tmp/trash -Wall
gcc --help=warnings | less
./compile LICENSE
a
./compile.sh LICENSE
tmux attach
mkdir web-basic
cd web-basic
mkdir bootstrap-basic
mv * bootstrap-basic
mv ~/Downloads/webapp-basic.tar.gz .
tar -xvcf webapp-basic.tar.gz
man tar
tar -x webapp-basic.tar.gz
tar -xf webapp-basic.tar.gz
git push https://github.com/PlexSheep/web-basic
git push --set-upstream https://github.com/PlexSheep/web-basic master
rm -r .git
git push --set-upstream https://github.com/PlexSheep/web-basic main
git push --set-upstream https://github.com/PlexSheep/web-basic
git remote add origin main https://github.com/PlexSheep/web-basic
git push --set-upstream main master
git push --set-upstream master main
rm -r .git -f
git a
git remote add 
git remote add main https://github.com/PlexSheep/web-basic
git init
git remote add main https://github.com/PlexSheep/web-basic.git
git add *
git push --set-upstream main
git remote add origin https://github.com/PlexSheep/web-basic/settings
git commit -m "initial commit"
git push
git remote status
git remote remove origin
git remote add origin https://github.com/PlexSheep/web-basic
git push -u origin main
git push -u origin master
cd webapp-basic
rm index.html
rm supersite.html
mv grid.html index.html
mv main.css styles.css
nvim styles.css
mv webapp-basic plain
yay -Syu docker
yay -Syu onlyoffice
yay -Syu only-office
yay -Syu php
php
cd we
php -S 127.0.0.1:8080
php -S 127.0.0.1:8000
git restore
git restore index.js
tmux 
nvim index.html
compile-and-run.sh huffman.c -dvf testfiles/10-random.img
compile-and-run.sh huffman.c -dvf testfiles/10M-random.img
compile-and-run.sh huffman.c -dvf testfiles/10G-random.img
compile-and-run.sh huffman.c -dvf testfiles/100K-random.img
compile-and-run.sh huffman.c -dvf testfiles/1G-random.img
bin/huffman -vdf testfiles/Linux-book.epub 
bin/huffman -vdf testfiles/100K-random.img
compile-and-run.sh bytefrequency.c
echo "AAAAAAAAAAAAAAAA" | bin/bytefrequency
compile-and-run.sh huffman.c -dvf testfiles/1K-random.img
compile-and-run.sh huffman.c -dvf testfiles/smalltext.txt
ng serve --open
rm webapp-basic.tar.gz
cd plain
cd TS
cd angular
cd angular-demos
cd angular-tour-of-heroes
cd src
rm -r huffman/bin
bat *
rm 7-teiler.c
nvim 7teiler.c
mv 7teiler.c dividableBy7.c
mkdir huffman
mkdir huffman --help
mkdir huffman -p
nvim compile-and-run.sh
nvim compile.sh
nvim compile-all.sh
./compile-and-run.sh dividableBy7.c
./compile-all.sh
nvim warning.c
nvim *
micro
yay -Syu micro
dd if=/dev/urandom of=100K-random.img count=100KiB
dd if=/dev/urandom of=1M-random.img count=1MiB
dd if=/dev/urandom of=10M-random.img count=10MiB
dd if=/dev/urandom of=100M-random.img count=100MiB
dd if=/dev/urandom of=10G-random.img count=10GiB
cp ~/Documents/Books/Guides/Informatik/Linux\ -\ Das\ umfassende\ Handbuch\ \(Michael\ Kofler\)\ \(z-lib.org\).epub .
mv Linux\ -\ Das\ umfassende\ Handbuch\ \(Michael\ Kofler\)\ \(z-lib.org\).epub Linux-book.epub
hexdump --help
hexdump -C Linux-book.epub
../compile.sh huffman.c
cp compile* ~/.local/bin
compile.sh huffman.c
compile-and-run.sh huffman.c -dvf testfiles/LICENSE
nvim bytefrequency.c
compile-and-run.sh huffman.c -dvf testfiles/10K-random.img
compile-and-run.sh huffman.c -dvf testfiles/100M-random.img
compile-and-run.sh huffman.c -dvf testfiles/Linux-book.epub
cp /var/log/libvirt/qemu/kali.log .
sudo cp /var/log/libvirt/qemu/kali.log .
sudo chown plex:plex *
cat kali.log >> kali.log
cat kali.log > a
cat a >> kali.log
chmod 755 kali.log
mv kali.log testfiles
man getc
uname -a
man scanf
vim
reset
sudo micro /etc/xdg/nvim/sysinit.vim
nvim 
man off_t
yay -Syu wl-copy wl-paste
yay -Syu wl-clipboard
mkdir gzip
git clone https://git.savannah.gnu.org/git/gzip.git
cd gzip
nvim gzip.c
compile-and-run.sh huffman.c -dvf testfiles/kali.log
compile-and-run.sh huffman.c -vf testfiles/kali.log
man size_t
pause
man free
man 3 free
man fseek
yay -S cups cups-pdf
yay -S samba avahi
yay -S  nss-mdns
sudo systemctl enable avahi-daemon
sudo systemctl start avahi-daemon
sudo systemctl status cups
sudo systemctl enable cups
yay c-S Avahi pygtk python-dbus
yay -S Avahi pygtk python-dbus
locale
LC_ALL="en_US.UTF-8"
avahi-discover
sudo systemctl restart Avahi
sudo systemctl restart Avahi-daemon
sudo systemctl restart avahi-daemon
sudo systemctl status avahi-daemon
sudo systemctl restart cups
yay -S netdiscover
nmap 192.168.178.1-192.168.178.40
nmap 192.168.178.1/24 -T4
reboot
compile-and-run.sh huffman.c -f testfiles/kali.log
compile-and-run.sh huffman.c -vdf testfiles/kali.log
compile-and-run.sh huffman.c -vdf testfiles/100M-random.img
bin/huffman -vdf testfiles/LICENSE
bin/huffman -vdf testfiles/10M-random.img
bin/huffman -vdf testfiles/smalltext.txt
compile-and-run.sh huffman.c -vdf testfiles/smalltext.txt#
compile-and-run.sh huffman.c -vdf testfiles/smalltext.txt
compile-and-run.sh huffman.c -vdf testfiles/1K-random.img
compile-and-run.sh huffman.c -vdf testfiles/LICENSE
compile-and-run.sh huffman.c -vdf ~/Music/comps/12\ A.M\ Study\ Session\ ðƒ¿ƒ³ƒº\ \[lofi\ hip\ hop_chill\ beats\]\ \[l98w9OSKVNA\].opus
compile-and-run.sh huffman.c -vdf ~/Music/comps/twitch-music-comp.mp3
compile-and-run.sh huffman.c -vdf testfiles/Linux-book.epub
compile-and-run.sh huffman.c -vdf testfiles/1G-random.img
make generate
make abc.c
make abc
gcc abc.c
gcc abc.c -lm
gcc abc.c -lm -o abc
./abc
rm abc
mv abc.c abc.c.bak
git discard
git --help
cd .git
git checkout master
git rm *
git status
git checkout
git checkout origin/main
git pull origin master
git pull origin min
git pull origin main
rm .git -rf
git clone https://github.com/PlexSheep/c-basic
mv c-basic c
cd c
mv basic/* c-basic
mv basic/* c-basic -r
rm c-basic/huffman/* -r
mv basic/* c-basic -f
rm -r basic
rm -r basic -f
cp c-basic c-basic.bak
pwd
l obj
l all
touch all
touch all.c
rm all
rm all.c
mkdir -p bin huffman/testfiles huffman/bin
make | grep all
make | grep "all"
make |less
make A
l\

make veryclean
rm -r c-basic.bak
rm -r c-basic.bak -f
cp c-basic c-basic.bak -r
rm success
rm -r bin
l huffman/bin
compile-and-run.sh huffman.c -vdf testfiles/10G-random.img
nmap fritz.box
gcc huffman.c -g -o bin/huffman 
compile-and-run.sh huffman.c -vdf testfiles/10K-random.img
compile-and-run.sh huffman.c -vdf testfiles/10M-random.img
make big
bat big.txt
yes $(cat small.txt) | head -c 1MB > huffman/testfiles/mid.txt
yes $(cat Makefile) | head -c 1MB > huffman/testfiles/mid.txt
yes '$(cat Makefile)' | head -c 1MB > huffman/testfiles/mid.txt
compile-and-run.sh huffman.c -vdf testfiles/100K-random.img
compile-and-run.sh huffman.c -vdf testfiles/tiny.txt
bat testfiles/tiny.txt
compile-and-run.sh huffman.c -vdf testfiles/small.txt
compile-and-run.sh huffman.c -vdf testfiles/100K-zero.img
compile-and-run.sh huffman.c -vdf testfiles/100K-zero.img | grep 100
compile-and-run.sh huffman.c -vdf testfiles/100K-zero.img | bat
compile-and-run.sh huffman.c -vdf testfiles/1M-zero.img
compile-and-run.sh huffman.c -vdf testfiles/1M-random.img
compile-and-run.sh huffman.c -vdf testfiles/1K-zero.img 
compile-and-run.sh huffman.c -vdf testfiles/1K-zero.img | bat
bin/huffman -vdf testfiles/10G-random.img
bin/huffman -vdf testfiles/1K-random.img
bat testfiles/mid.txt
bat testfiles/small.txt
cd c-basic
l huffman/testfiles/
bat huffman/testfiles/small.txt
cat options.c
$(cat options.c|echo)
$(cat options.c)
cat options.c|echo
cat options.c|
cat options.c|yes
cat options.c|cat
bin/huffman -vdf testfiles/mid.txt
man fread
btop huffman
btop -h
htop
ionice
dd if=/dev/urandom of=/dev/null
dd if=/dev/urandom of=/tmp/trash
cp /dev/urandom /dev/null
cp /dev/urandom /tmp/trash
cp ~/Music/* /tmp/trash -r
mkdir /tmp/trashdir
cp ~/Music/* /tmp/trashdir -r
cp ~/Documents/code/c/basic/huffman/testfiles/* /dev/null
mkdir /tmp/trash
cp ~/Documents/code/c/basic/huffman/testfiles/* /tmp/trash
rm -rf /tmp/tras*
mkdir ~/deleteme
dd if=/dev/urandom of=~/deleteme/a
dd if=/dev/urandom of=/home/plex/deleteme/a
cd deleteme
cp ~/Documents/code/c/basic/huffman/testfiles/* ~/deleteme
gzip *
gzip * -k
rm -rf deleteme
du
du -h
df -h
lsusb
sudo umount /dev/sda1
df
lsblk
sudo dd id=linuxmint-21-cinnamon-64bit.iso of=/dev/sda bs=1M status=progress
sudo dd if=linuxmint-21-cinnamon-64bit.iso of=/dev/sda bs=1M status=progress
cp balenaEtcher-1.10.2-x64.AppImage ~/.local/bin
mv ~/.local/bin/balenaEtcher-1.10.2-x64.AppImage ~/.local/bin/balenaEtcher
gcc -h
gcc --help
man gcc
bat Makefile
l bin
nvim /etc/xdg/nvim/sysinit.vim
man gcc > huffman/testfiles/gcc.txt
bat huffman/testfiles/gcc.txt
l huffman/testfiles/gcc.txt
bat /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/system@0005ede62e3f06c7-88ed809dbee83dfe.journal~ /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/system@88ee2fd99e744366b4aab4e1934ae71c-0000000000000001-0005edd5cb37c854.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/system@88ee2fd99e744366b4aab4e1934ae71c-00000000000007af-0005edd5d284c308.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/system@88ee2fd99e744366b4aab4e1934ae71c-0000000000002be2-0005edd623132e8f.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/system@88ee2fd99e744366b4aab4e1934ae71c-0000000000040e51-0005ede62e3cfbe2.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/system@88ee2fd99e744366b4aab4e1934ae71c-00000000000681aa-0005edec09baeb7f.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/system@88ee2fd99e744366b4aab4e1934ae71c-00000000000807ad-0005edec3ae23259.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/system@88ee2fd99e744366b4aab4e1934ae71c-00000000000a285b-0005edfc8237cdec.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/system@88ee2fd99e744366b4aab4e1934ae71c-00000000000d54b0-0005ee26c082dbba.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/system@88ee2fd99e744366b4aab4e1934ae71c-00000000000ffdff-0005ee286fe52ec0.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/system.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/user-1000@0005ede62f4b5adb-f9e0bb714556ac0d.journal~ /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/user-1000@3639dc701eeb4dffae247ed5565e74f3-0000000000000ee8-0005edd5e7b9e707.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/user-1000@3639dc701eeb4dffae247ed5565e74f3-0000000000002be9-0005edd623149c9d.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/user-1000@3639dc701eeb4dffae247ed5565e74f3-0000000000041472-0005ede62f4b5642.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/user-1000@3639dc701eeb4dffae247ed5565e74f3-00000000000681a9-0005edec09b628d0.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/user-1000@3639dc701eeb4dffae247ed5565e74f3-00000000000807ac-0005edec3addb3df.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/user-1000@3639dc701eeb4dffae247ed5565e74f3-00000000000a285a-0005edfc822f4771.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/user-1000@3639dc701eeb4dffae247ed5565e74f3-00000000000d54af-0005ee26c07b0ece.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/user-1000@3639dc701eeb4dffae247ed5565e74f3-00000000000ffdfe-0005ee286fe07bb2.journal /var/log/journal/ee940a5df19a47b0af7960488c70b2c9/user-1000.journal 
man float
man 3 float
nvim /etc/pam.d/kde
yes
yes s 
cat "hi" | yes
yes "a\
"
pgrep dd
ps axu | grep dd
ps |grep dd
sudo kill 17758
sudo kill -9 17758
ps -e|grep dd
sudo dd if=linuxmint-21-cinnamon-64bit.iso of=/dev/sda bs=1M --help
sudo dd if=linuxmint-21-cinnamon-64bit.iso of=/dev/sda bs=1M
cd testfiles
dd if=/dev/zero of=10K-zero.img count=10KiB
hexdump 10K-zero.img
dd if=/dev/zero of=1G-zero.img count=1GiB
gzip 1G-zero.img
gzip 1G-random.img
cp *.gz .
dd if=/dev/urandom of=1G-random.img count=1GiB
/bin/ls -l
gzip -h
gzip -k *
cd /
cd .config/
nvim btop.conf
rm Makefile
git pull
mkdir make
cd make
rm -r make
nvim .gitignore
lazygit#
l make
rm Makefile\ \!
nvim make
cd huffman
nvim
make 
cd /tmp
		truncate -s 50M huffman/testfiles/test.txt \

touch test
l test
truncate -s 50M test\

truncate -s 1G test\

bat test
cat test
hexdump test
rm test
bat mid
bat mid.txt
bat small
bat small.txt
du mid.txt
du mid.txt -h
du small.txt
du small.txt -h
bat tiny.txt
yes this is test file | head -c 100KB > test.file.
bat test.file.
rm huge.txt
rm big.txt
rm abc.o
l huffman/testfiles
rm test.file.
rm *.txt
..
nvim README.md
powertop
sudo pkill dd
sudo btop
yay -S etcher
yay -S Etcher
cd Downloads
chmod +x balenaEtcher-1.7.9-x64.AppImage
./balenaEtcher-1.7.9-x64.AppImage
sudo ./balenaEtcher-1.7.9-x64.AppImage
yay -S clight
clight
yay -R clight -S wluma
yay -R clight
yay -Syu wluma
wluma
wluma --help
sudo mv /etc/modprobe.d/i915.conf /etc/modprobe.d/i915.conf.disabled
l /etc/modprobe.d
bat /etc/modprobe.d
bat /etc/modprobe.d/*
sudo mv /etc/modprobe.d/framework-als-deactivate.conf /etc/modprobe.d/framework-als-deactivate.conf.disabled
 loginctl show-session $XDG_SESSION_ID
shutdown --help
shutdown -P
shutdown -P now
shutdown 
shutdown now
man
man shutdown
shutdown -h now
sudo shutdown now
compile-and-run.sh huffman.c -vdf testfiles/1K-zero.img
yay -S hardinfo
yay -S java mono go
java
ssh ganggangoverflow.de
bat .viminfo
ip
nmap
nmap localhost -v
bin/huffman -vdf testfiles/tiny.txt
bin/huffman -vdf testfiles/small.txt
l testfiles
sudo pacman -Syu speedtest Bitwig
speed
speedometer
bat speedcc.fit
file speedcc.fit
hexdump speedcc.fit
rm speedcc.fit
sudo pacman -Syuu
sudo cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup
 awk '/^## Germany$/{f=1; next}f==0{next}/^$/{exit}{print substr($0, 1);}' /etc/pacman.d/mirrorlist.backup
sed -i 's/^#Server/Server/' /etc/pacman.d/mirrorlist.backup
sudo sed -i 's/^#Server/Server/' /etc/pacman.d/mirrorlist.backup
rankmirrors -n 6 /etc/pacman.d/mirrorlist.backup > /etc/pacman.d/mirrorlist
sudo rankmirrors -n 6 /etc/pacman.d/mirrorlist.backup > /etc/pacman.d/mirrorlist
sudo su
lazygit
bin/huffman -vdf testfiles/10K-zero.img
bin/huffman -vdf testfiles/10K-random.img
bin/huffman -vdf /dev/urandom
cat /dev/random | bin/huffman .vd
cat /dev/random | bin/huffman -vd
cat /dev/random | bin/huffman -vdf
nvim huffman.c
compile-and-run.sh huffman.c -vdf testfiles/mid.txt
btp
ip a
bat /etc/pacman.d/mirrorlist
yay -Syu speedtest Bitwig-studio
speedtest
yay -Syu speedtest
yay -Syu bitwig-studio speed-test 
speed-test
CLEAR
clear
poweroff
rm studenteninfo.c
nvim Makefile
btop
gcc main.c
./a.out
rm a.out
gcc -g -o main
gcc main.c -g -o main
make all
make
bin/studentList
make clean
rm main.c
rm *
yay -Syuu
ll
cp 01_crypto_preview.pdf ~/Documents/Schulsachen/ring/2022-11-28
cp LA_8_lgs_2_preview.pdf ~/Documents/Schulsachen/ring/2022-11-28
yay -Syu obsidian
wget https://gist.githubusercontent.com/AO8/5994342bd9fac0d5ecea18c054d5cbe1/raw/1105a6d0dee25661add14109916a19d16492c01d/ceasar_cipher.py
chmod +x ceasar_cipher.py
./ceasar_cipher.py ZUOTF SGF SQZGS
./ceasar_cipher.py --help
nvim ceasar_cipher.py
python ceasar_cipher.py
ls
python 
man ascii
sudo powertop
n
l
bin/huffman -vdf ~/Downloads/01_crypto_preview.pdf
bin/huffman -vdf ~/Downloads/crypto_chiffre.pdf
mkdir 2022-11-28
nvim ceasar_cipher.py
rm ceasar_cipher.py
git clone https://github.com/rhamaa/Caesar-Cipher-Brute-Force
chmod +x Caesar-Cipher-Brute-Force
./Caesar-Cipher-Brute-Force --help
nvim Caesar-Cipher-Brute-Force
chmod +x caesar_brute.py
./caesar_brute.py --help
./caesar_brute.py "ZUOTF SGF SQZGS"
nvim caesar_brute.py
rm -r Caesar-Cipher-Brute-Force
rm -r Caesar-Cipher-Brute-Force -f
git clone https://github.com/Insecurities/CaesarSalad
n
python CaesarsSalad.py
python CaesarsSalad.py "ZUOTF"
chmod +x CaesarsSalad.py
./CaesarsSalad.py
./CaesarsSalad.py --help
./CaesarsSalad.py ZUO
./CaesarsSalad.py "ZUO\
"
..
l
rm -rf CaesarSalad
python 
clear
btop
n
ping archlinux.org
yay -Syuu
speed-test
pkill Discord
btop
shutdown -h now
cd
cd .wakeonlan
..
l
n
